{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"c96e3dfd6993b8444a338ea07da2f13478de192a","modified":1460384231000},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1460262547000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1460262547000},{"_id":"themes/landscape/.DS_Store","hash":"b2266e3f7296d0ba367868bd6ca59615d90f5c7c","modified":1460263874000},{"_id":"themes/landscape/_config.yml","hash":"d125babe4c65089f1b6f551457be2f7d9198220b","modified":1460382612000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1460262547000},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1460262547000},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1460262547000},{"_id":"source/_posts/通过URL打开Activity.md","hash":"800b199b73e766e7a95060ccb0475c06f712add3","modified":1460384446000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1460382683000},{"_id":"source/about/index.md","hash":"ada7493cec67b7a9d66bee5d827d0aaab270a550","modified":1460384300000},{"_id":"source/about/.DS_Store","hash":"4b1737e2d95536850ac239b97c1d4b1deae9a602","modified":1460359669000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1460262548000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1460262548000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1460262548000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1460262548000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1460262548000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1460262548000},{"_id":"themes/landscape/layout/.DS_Store","hash":"d264cca457c8df55e4164513708f881b81cc8fb9","modified":1460264036000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1460262548000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1460262548000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1460262548000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1460262548000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1460262548000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1460262548000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1460262548000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1460262548000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1460262548000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1460262548000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1460262548000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1460262548000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1460262548000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1460262548000},{"_id":"themes/landscape/source/css/.DS_Store","hash":"316a11311244021a8053048ac8187afa35a8ab94","modified":1460341176000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1460262548000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1460262548000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1460262548000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1460262548000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1460262548000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1460262548000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1460262548000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1460262548000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1460262548000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"36eefe6332b86b66023a9884b754d305235846b4","modified":1460262548000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1460262548000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1460262548000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1460262548000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1460262548000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1460262548000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1460262548000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1460262548000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1460262548000},{"_id":"themes/landscape/source/css/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1460336981000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1460262548000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1460262548000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1460262548000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"298090883aae3d6b3390c746db40f11883d5597f","modified":1460337533000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1460262548000},{"_id":"public/about/index.html","hash":"6a1a9230ad374d70572bddee6a72cb112a0fba97","modified":1460384547648},{"_id":"public/archives/index.html","hash":"ed2eed98e1f57f0218f8a91b661dc850c2706576","modified":1460384547648},{"_id":"public/archives/2016/index.html","hash":"c2edb79a5086760014e661a3278a591ca992397e","modified":1460384547648},{"_id":"public/archives/2016/04/index.html","hash":"c6ee02761063b02913917fe3eb71616d32d6c15f","modified":1460384547648},{"_id":"public/tags/ActivityRouter/index.html","hash":"a0ff1e1607ae499318a1b73baf38174bc95e7ae5","modified":1460384547648},{"_id":"public/2016/04/11/通过URL打开Activity/index.html","hash":"bbb5ab55d8a63609ef0fee4a3d1dad3abe1ed032","modified":1460384547648},{"_id":"public/index.html","hash":"e7f82bfaf0a4e2412cd4d6ff78e776ffb37c80b4","modified":1460384547648},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1460383060087},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1460383060087},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1460383060087},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1460383060087},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1460383060087},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1460383060087},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1460383060087},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1460383060087},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1460383060087},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1460383060090},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1460383060871},{"_id":"public/css/images/banner.jpg","hash":"298090883aae3d6b3390c746db40f11883d5597f","modified":1460383060872},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1460383060875},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1460383060875},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1460383060875},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1460383060875},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1460383060875},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1460383060876},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1460383060876},{"_id":"public/css/style.css","hash":"e9ae89d3eaf09b4fb3b48f3da5e58e74ea5875b0","modified":1460383060876},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1460383060876},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1460383060876},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1460383060879}],"Category":[],"Data":[],"Page":[{"title":"About Me","date":"1990-11-12T13:20:18.000Z","tags":null,"_content":"\n## 一、简介\n\n混迹的魔都的 `Android工程师`，对技术很感兴趣，略懂 `后端` 、`网页` 和 `iOS`，也会一点 `Photoshop` ，喜欢帅气的产品，对细节有高的追求。\n\n目前就职于 `百度` ，老东家有 `新蛋网` 和 `布丁动画`。\n\n\n\n``` java\npublic static Human aboutMe() {\n    Human me = new Human();\n    me.setName(\"曹冬平\");\n    me.setEnglishName(\"Jason Cao\");\n    me.setGender(Human.MALE);\n    me.setEmail(\"mzule\".concat(\"4j\").concat(\"@\").concat(\"gmail.com\"));\n    me.setLocation(\"上海市\");\n    me.setHobbies(\"编码\", \"旅游\", \"看书\", \"品美食\", \"睡懒觉\", \"偶尔运动\");\n    me.setLabel(\"攻城师\",\"电商\",\"Geek\");\n    me.setMotto(\"the devil is in detail\");\n    return me;\n}\n```\n\n## 二、开源项目\n### [ActivityRouter](https://mzule.github.io/ActivityRouter/)\n\n`ActivityRouter` 可以方便的给 Activity 定义 url，然后通过 url 打开 Activity.\n\n### [EasyAdapter](github.com/mzule/EasyAdapter/)\n\n`EasyAdapter` 极大的简化 ViewHolder 模式的Adapter开发，支持 ListView 和 RecyclerView.\n\n## 三、更多的了解\n\n[Github](http://www.github.com/mzule)\n\n[StackOverFlow](http://stackoverflow.com/users/1985786/jason-cao)\n\n[Sina Weibo](http://weibo.com/mzule)\n\n[Zhihu](https://www.zhihu.com/people/mzule)\n\n## 四、小伙伴的链接\n\n[http://www.zcool.com.cn/u/1683871](http://www.zcool.com.cn/u/1683871)\n\n[http://www.barryzhang.com](http://www.barryzhang.com)\n\n[http://www.yigeek.com/](http://www.yigeek.com)","source":"about/index.md","raw":"---\ntitle: About Me\ndate: 1990-11-12 21:20:18\ntags:\n---\n\n## 一、简介\n\n混迹的魔都的 `Android工程师`，对技术很感兴趣，略懂 `后端` 、`网页` 和 `iOS`，也会一点 `Photoshop` ，喜欢帅气的产品，对细节有高的追求。\n\n目前就职于 `百度` ，老东家有 `新蛋网` 和 `布丁动画`。\n\n\n\n``` java\npublic static Human aboutMe() {\n    Human me = new Human();\n    me.setName(\"曹冬平\");\n    me.setEnglishName(\"Jason Cao\");\n    me.setGender(Human.MALE);\n    me.setEmail(\"mzule\".concat(\"4j\").concat(\"@\").concat(\"gmail.com\"));\n    me.setLocation(\"上海市\");\n    me.setHobbies(\"编码\", \"旅游\", \"看书\", \"品美食\", \"睡懒觉\", \"偶尔运动\");\n    me.setLabel(\"攻城师\",\"电商\",\"Geek\");\n    me.setMotto(\"the devil is in detail\");\n    return me;\n}\n```\n\n## 二、开源项目\n### [ActivityRouter](https://mzule.github.io/ActivityRouter/)\n\n`ActivityRouter` 可以方便的给 Activity 定义 url，然后通过 url 打开 Activity.\n\n### [EasyAdapter](github.com/mzule/EasyAdapter/)\n\n`EasyAdapter` 极大的简化 ViewHolder 模式的Adapter开发，支持 ListView 和 RecyclerView.\n\n## 三、更多的了解\n\n[Github](http://www.github.com/mzule)\n\n[StackOverFlow](http://stackoverflow.com/users/1985786/jason-cao)\n\n[Sina Weibo](http://weibo.com/mzule)\n\n[Zhihu](https://www.zhihu.com/people/mzule)\n\n## 四、小伙伴的链接\n\n[http://www.zcool.com.cn/u/1683871](http://www.zcool.com.cn/u/1683871)\n\n[http://www.barryzhang.com](http://www.barryzhang.com)\n\n[http://www.yigeek.com/](http://www.yigeek.com)","updated":"2016-04-11T14:18:20.000Z","path":"about/index.html","_id":"cimw2d8lk0001p9quks5db5px","comments":1,"layout":"page","content":"<h2 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h2><p>混迹的魔都的 <code>Android工程师</code>，对技术很感兴趣，略懂 <code>后端</code> 、<code>网页</code> 和 <code>iOS</code>，也会一点 <code>Photoshop</code> ，喜欢帅气的产品，对细节有高的追求。</p>\n<p>目前就职于 <code>百度</code> ，老东家有 <code>新蛋网</code> 和 <code>布丁动画</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Human <span class=\"title\">aboutMe</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Human me = <span class=\"keyword\">new</span> Human();</span><br><span class=\"line\">    me.setName(<span class=\"string\">\"曹冬平\"</span>);</span><br><span class=\"line\">    me.setEnglishName(<span class=\"string\">\"Jason Cao\"</span>);</span><br><span class=\"line\">    me.setGender(Human.MALE);</span><br><span class=\"line\">    me.setEmail(<span class=\"string\">\"mzule\"</span>.concat(<span class=\"string\">\"4j\"</span>).concat(<span class=\"string\">\"@\"</span>).concat(<span class=\"string\">\"gmail.com\"</span>));</span><br><span class=\"line\">    me.setLocation(<span class=\"string\">\"上海市\"</span>);</span><br><span class=\"line\">    me.setHobbies(<span class=\"string\">\"编码\"</span>, <span class=\"string\">\"旅游\"</span>, <span class=\"string\">\"看书\"</span>, <span class=\"string\">\"品美食\"</span>, <span class=\"string\">\"睡懒觉\"</span>, <span class=\"string\">\"偶尔运动\"</span>);</span><br><span class=\"line\">    me.setLabel(<span class=\"string\">\"攻城师\"</span>,<span class=\"string\">\"电商\"</span>,<span class=\"string\">\"Geek\"</span>);</span><br><span class=\"line\">    me.setMotto(<span class=\"string\">\"the devil is in detail\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> me;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、开源项目\"><a href=\"#二、开源项目\" class=\"headerlink\" title=\"二、开源项目\"></a>二、开源项目</h2><h3 id=\"ActivityRouter\"><a href=\"#ActivityRouter\" class=\"headerlink\" title=\"ActivityRouter\"></a><a href=\"https://mzule.github.io/ActivityRouter/\" target=\"_blank\" rel=\"external\">ActivityRouter</a></h3><p><code>ActivityRouter</code> 可以方便的给 Activity 定义 url，然后通过 url 打开 Activity.</p>\n<h3 id=\"EasyAdapter\"><a href=\"#EasyAdapter\" class=\"headerlink\" title=\"EasyAdapter\"></a><a href=\"github.com/mzule/EasyAdapter/\">EasyAdapter</a></h3><p><code>EasyAdapter</code> 极大的简化 ViewHolder 模式的Adapter开发，支持 ListView 和 RecyclerView.</p>\n<h2 id=\"三、更多的了解\"><a href=\"#三、更多的了解\" class=\"headerlink\" title=\"三、更多的了解\"></a>三、更多的了解</h2><p><a href=\"http://www.github.com/mzule\" target=\"_blank\" rel=\"external\">Github</a></p>\n<p><a href=\"http://stackoverflow.com/users/1985786/jason-cao\" target=\"_blank\" rel=\"external\">StackOverFlow</a></p>\n<p><a href=\"http://weibo.com/mzule\" target=\"_blank\" rel=\"external\">Sina Weibo</a></p>\n<p><a href=\"https://www.zhihu.com/people/mzule\" target=\"_blank\" rel=\"external\">Zhihu</a></p>\n<h2 id=\"四、小伙伴的链接\"><a href=\"#四、小伙伴的链接\" class=\"headerlink\" title=\"四、小伙伴的链接\"></a>四、小伙伴的链接</h2><p><a href=\"http://www.zcool.com.cn/u/1683871\" target=\"_blank\" rel=\"external\">http://www.zcool.com.cn/u/1683871</a></p>\n<p><a href=\"http://www.barryzhang.com\" target=\"_blank\" rel=\"external\">http://www.barryzhang.com</a></p>\n<p><a href=\"http://www.yigeek.com\" target=\"_blank\" rel=\"external\">http://www.yigeek.com/</a></p>\n","excerpt":"","more":"<h2 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h2><p>混迹的魔都的 <code>Android工程师</code>，对技术很感兴趣，略懂 <code>后端</code> 、<code>网页</code> 和 <code>iOS</code>，也会一点 <code>Photoshop</code> ，喜欢帅气的产品，对细节有高的追求。</p>\n<p>目前就职于 <code>百度</code> ，老东家有 <code>新蛋网</code> 和 <code>布丁动画</code>。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Human <span class=\"title\">aboutMe</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Human me = <span class=\"keyword\">new</span> Human();</span><br><span class=\"line\">    me.setName(<span class=\"string\">\"曹冬平\"</span>);</span><br><span class=\"line\">    me.setEnglishName(<span class=\"string\">\"Jason Cao\"</span>);</span><br><span class=\"line\">    me.setGender(Human.MALE);</span><br><span class=\"line\">    me.setEmail(<span class=\"string\">\"mzule\"</span>.concat(<span class=\"string\">\"4j\"</span>).concat(<span class=\"string\">\"@\"</span>).concat(<span class=\"string\">\"gmail.com\"</span>));</span><br><span class=\"line\">    me.setLocation(<span class=\"string\">\"上海市\"</span>);</span><br><span class=\"line\">    me.setHobbies(<span class=\"string\">\"编码\"</span>, <span class=\"string\">\"旅游\"</span>, <span class=\"string\">\"看书\"</span>, <span class=\"string\">\"品美食\"</span>, <span class=\"string\">\"睡懒觉\"</span>, <span class=\"string\">\"偶尔运动\"</span>);</span><br><span class=\"line\">    me.setLabel(<span class=\"string\">\"攻城师\"</span>,<span class=\"string\">\"电商\"</span>,<span class=\"string\">\"Geek\"</span>);</span><br><span class=\"line\">    me.setMotto(<span class=\"string\">\"the devil is in detail\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> me;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、开源项目\"><a href=\"#二、开源项目\" class=\"headerlink\" title=\"二、开源项目\"></a>二、开源项目</h2><h3 id=\"ActivityRouter\"><a href=\"#ActivityRouter\" class=\"headerlink\" title=\"ActivityRouter\"></a><a href=\"https://mzule.github.io/ActivityRouter/\">ActivityRouter</a></h3><p><code>ActivityRouter</code> 可以方便的给 Activity 定义 url，然后通过 url 打开 Activity.</p>\n<h3 id=\"EasyAdapter\"><a href=\"#EasyAdapter\" class=\"headerlink\" title=\"EasyAdapter\"></a><a href=\"github.com/mzule/EasyAdapter/\">EasyAdapter</a></h3><p><code>EasyAdapter</code> 极大的简化 ViewHolder 模式的Adapter开发，支持 ListView 和 RecyclerView.</p>\n<h2 id=\"三、更多的了解\"><a href=\"#三、更多的了解\" class=\"headerlink\" title=\"三、更多的了解\"></a>三、更多的了解</h2><p><a href=\"http://www.github.com/mzule\">Github</a></p>\n<p><a href=\"http://stackoverflow.com/users/1985786/jason-cao\">StackOverFlow</a></p>\n<p><a href=\"http://weibo.com/mzule\">Sina Weibo</a></p>\n<p><a href=\"https://www.zhihu.com/people/mzule\">Zhihu</a></p>\n<h2 id=\"四、小伙伴的链接\"><a href=\"#四、小伙伴的链接\" class=\"headerlink\" title=\"四、小伙伴的链接\"></a>四、小伙伴的链接</h2><p><a href=\"http://www.zcool.com.cn/u/1683871\">http://www.zcool.com.cn/u/1683871</a></p>\n<p><a href=\"http://www.barryzhang.com\">http://www.barryzhang.com</a></p>\n<p><a href=\"http://www.yigeek.com\">http://www.yigeek.com/</a></p>\n"}],"Post":[{"title":"通过 URL 打开 Activity","date":"2016-04-11T13:28:21.000Z","_content":"\n为每个 Activity 绑定一个 url 可以方便的让第三方 app 直接打开这些 Activity。也可以方便在 app 内部进行页面跳转，解耦。\n\n![](http://7sbl54.com1.z0.glb.clouddn.com/blog_QQ20160411-22.png)\n\n<!-- more -->\n\n## 背景\n\n举一个常见的案例，假设我们有个产品 A，产品 A 包含 h5 网页端和客户端，当用户在手机打开我们的 h5 网页端的时候，我们会期望如果用户手机安装了我们的客户端，则直接打开 app，否则停留在网页端浏览。\n\n这是一个很常见的需求，但是实现需要 h5 和 Android 的配合，本文会先说下原理，然后单独描述 Android 端需要做的事情，最后会给一个链接说明 h5 的工作。\n\n## 原理\n\nAndroid 端先给 Activity 绑定一个 url ，比如说是 `myapp://main`. \n\n用户访问 `http://myapp.com` 网页时，h5 尝试访问 `myapp://main`，如果用户安装了客户端，则会打开相应的 Activity，否则会继续留在 h5 浏览网页。\n\n那么，如何给 Activity 绑定一个 url 是在 Android 端的关键。\n\n## Android 实现\n\n创建一个空的 ViewActivity.\n\n``` java\npublic class ViewActivity extends Activity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    }\n}\n```\n\n在 `AndroidManifest.xml` 里面注册 ViewActivity，包含一个 action 为  `android.intent.action.VIEW` 的 `intent-filter`\n\n``` xml\n<activity\n    android:name=\".ViewActivity\"\n    android:theme=\"@android:style/Theme.NoDisplay\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.VIEW\" />\n        <category android:name=\"android.intent.category.DEFAULT\" />\n        <category android:name=\"android.intent.category.BROWSABLE\" />\n        <data android:scheme=\"myapp\" />\n    </intent-filter>\n</activity>\n```\n\n这样，`ViewActivity` 就具备了接收 `myapp` 协议的 `android.intent.action.VIEW` 事件的能力。比如说，如果某个 app 执行了下面的这段逻辑，我们的 ViewActivity 就可能被打开。\n\n```java\nIntent intent = new Intent(Intent.ACTION_VIEW);\nintent.setData(Uri.parse(\"myapp://dosomething\"));\nstartActivity(intent);\n```\n刚才之所以说 \"可能被打开\"，是为了严谨。因为完全可能用户手机上，还有另外一个 app 也声明了一样协议的 intent-filter. 这时候系统就会给出一个弹出框，让用户选择一个期望的应用来打开该地址。\n\n![](http://7sbl54.com1.z0.glb.clouddn.com/blog_chooser.png)\n\n既然入口找到了，接下来就简单了，无非就是实现一下 ViewActivity 处理跳转逻辑，比如这样。\n\n``` java\npublic class ViewActivity extends Activity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        Uri uri = getIntent().getData();\n        String url = uri.toString();\n        if (\"myapp://main\".equals(url)) {\n            startActivity(new Intent(ViewActivity.this, MainActivity.class));\n        } else if (\"myapp://user\".equals(url)) {\n            startActivity(new Intent(ViewActivity.this, UserActivity.class));\n        }\n        finish();\n    }\n}\n```\n但是上面这种，这是一个理想的情况，因为现实情况会复杂的多。比如说会遇到传参问题，打开一个 UserActivity 可能都是需要指定一个 userId 的。不过再怎么复杂，无非就是对一个 url 的解析。\n\n下面会介绍一个我写的开源项目，省掉了解析 url 的麻烦，下面会基于这个库来说明。\n\n## 库 \n\n这个库叫 [ActivityRouter](https://github.com/mzule/ActivityRouter)，通过给 Activity 添加注解来绑定 url. 首先我们要把库添加到项目里面来, 需要修改两个 build.gradle 文件。\n\n项目根目录的 build.gradle\n\n``` groovy\nbuildscript {\n  dependencies {\n    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.7'\n  }\n}\n```\n\napp 项目的 build.gradle\n\n``` groovy\napply plugin: 'android-apt'\n\ndependencies {\n    compile 'com.github.mzule.activityrouter:activityrouter:1.1.1'\n    apt 'com.github.mzule.activityrouter:compiler:1.1.1'\n}\n```\n\n这样，等项目 sync 完 ActivityRouter 就已经被集成在项目里面了。\n\n此外还需要改一个配置，之前在 `AndroidManifest.xml` 上注册的 ViewActivity 现在要换成 ActivityRouter 里面自带的 Activity，这样 ActivityRouter 才有机会处理相关的 Intent 事件。修改完的 `AndroidManifest.xml` 如下：\n\n``` xml\n<activity\n    android:name=\"com.github.mzule.activityrouter.router.RouterActivity\"\n    android:theme=\"@android:style/Theme.NoDisplay\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.VIEW\" />\n        <category android:name=\"android.intent.category.DEFAULT\" />\n        <category android:name=\"android.intent.category.BROWSABLE\" />\n        <data android:scheme=\"myapp\" />\n    </intent-filter>\n</activity>\n```\n\n接下来就是去修改需要绑定 url 的 Activity，添加注解即可，一个典型的实现如下：\n\n``` java\n@Router(\"main\")\npublic class MainActivity extends Activity {\n}\n```\n\n一个需要参数的 Activity 可以这样声明：\n\n``` java\n@Router(\"user/:userId\") // :userId 代表参数名为 userId\npublic class UserActivity extends Activity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        String userId = getIntent().getStringExtra(\"userId\"); // 获取参数 userId\n    }\n}\n```\n也可以给参数指定类型，比如说常见的 id 为 long 型.\n\n``` java\n@Router(value = \"user/:userId\", longExtra = \"userId\")\n```\n\n这样我们就可以通过 `myapp://main` 来访问 MainActivity, `myapp://user/89757` 来访问 UserActivity 并且 userId = 89757 了。\n\n## H5 实现\n\n如上文所说网页自动跳转到 app 需要 h5 配合，由于 h5 已经超越了 Android 的范畴，这边就直接贴个链接。\n\n[http://t.cn/RqMTBDZ](http://t.cn/RqMTBDZ)\n\n[http://t.cn/RzOQWGU](http://t.cn/RzOQWGU)\n\n## App 内应用场景\n\n除了第三方 app 跳转场景外，还可以在 app 内部 Activity 跳转时采用 Router 来实现，比如在 Android 端和后端约定好页面对应的 url，后端在发送 push 的时候，就可以发送特定的 url，客户端只需要处理打开 url 即可，可以有效减少 push 通知的适配工作。相关 API 如下：\n\n``` java\nRouters.open(Context, String)\nRouters.open(Context, Uri)\n```\n\n## 结语\n\n哈哈，感谢你看到这里。","source":"_posts/通过URL打开Activity.md","raw":"---\ntitle: 通过 URL 打开 Activity\ndate: 2016-04-11 21:28:21\ntags: ActivityRouter\n---\n\n为每个 Activity 绑定一个 url 可以方便的让第三方 app 直接打开这些 Activity。也可以方便在 app 内部进行页面跳转，解耦。\n\n![](http://7sbl54.com1.z0.glb.clouddn.com/blog_QQ20160411-22.png)\n\n<!-- more -->\n\n## 背景\n\n举一个常见的案例，假设我们有个产品 A，产品 A 包含 h5 网页端和客户端，当用户在手机打开我们的 h5 网页端的时候，我们会期望如果用户手机安装了我们的客户端，则直接打开 app，否则停留在网页端浏览。\n\n这是一个很常见的需求，但是实现需要 h5 和 Android 的配合，本文会先说下原理，然后单独描述 Android 端需要做的事情，最后会给一个链接说明 h5 的工作。\n\n## 原理\n\nAndroid 端先给 Activity 绑定一个 url ，比如说是 `myapp://main`. \n\n用户访问 `http://myapp.com` 网页时，h5 尝试访问 `myapp://main`，如果用户安装了客户端，则会打开相应的 Activity，否则会继续留在 h5 浏览网页。\n\n那么，如何给 Activity 绑定一个 url 是在 Android 端的关键。\n\n## Android 实现\n\n创建一个空的 ViewActivity.\n\n``` java\npublic class ViewActivity extends Activity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    }\n}\n```\n\n在 `AndroidManifest.xml` 里面注册 ViewActivity，包含一个 action 为  `android.intent.action.VIEW` 的 `intent-filter`\n\n``` xml\n<activity\n    android:name=\".ViewActivity\"\n    android:theme=\"@android:style/Theme.NoDisplay\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.VIEW\" />\n        <category android:name=\"android.intent.category.DEFAULT\" />\n        <category android:name=\"android.intent.category.BROWSABLE\" />\n        <data android:scheme=\"myapp\" />\n    </intent-filter>\n</activity>\n```\n\n这样，`ViewActivity` 就具备了接收 `myapp` 协议的 `android.intent.action.VIEW` 事件的能力。比如说，如果某个 app 执行了下面的这段逻辑，我们的 ViewActivity 就可能被打开。\n\n```java\nIntent intent = new Intent(Intent.ACTION_VIEW);\nintent.setData(Uri.parse(\"myapp://dosomething\"));\nstartActivity(intent);\n```\n刚才之所以说 \"可能被打开\"，是为了严谨。因为完全可能用户手机上，还有另外一个 app 也声明了一样协议的 intent-filter. 这时候系统就会给出一个弹出框，让用户选择一个期望的应用来打开该地址。\n\n![](http://7sbl54.com1.z0.glb.clouddn.com/blog_chooser.png)\n\n既然入口找到了，接下来就简单了，无非就是实现一下 ViewActivity 处理跳转逻辑，比如这样。\n\n``` java\npublic class ViewActivity extends Activity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        Uri uri = getIntent().getData();\n        String url = uri.toString();\n        if (\"myapp://main\".equals(url)) {\n            startActivity(new Intent(ViewActivity.this, MainActivity.class));\n        } else if (\"myapp://user\".equals(url)) {\n            startActivity(new Intent(ViewActivity.this, UserActivity.class));\n        }\n        finish();\n    }\n}\n```\n但是上面这种，这是一个理想的情况，因为现实情况会复杂的多。比如说会遇到传参问题，打开一个 UserActivity 可能都是需要指定一个 userId 的。不过再怎么复杂，无非就是对一个 url 的解析。\n\n下面会介绍一个我写的开源项目，省掉了解析 url 的麻烦，下面会基于这个库来说明。\n\n## 库 \n\n这个库叫 [ActivityRouter](https://github.com/mzule/ActivityRouter)，通过给 Activity 添加注解来绑定 url. 首先我们要把库添加到项目里面来, 需要修改两个 build.gradle 文件。\n\n项目根目录的 build.gradle\n\n``` groovy\nbuildscript {\n  dependencies {\n    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.7'\n  }\n}\n```\n\napp 项目的 build.gradle\n\n``` groovy\napply plugin: 'android-apt'\n\ndependencies {\n    compile 'com.github.mzule.activityrouter:activityrouter:1.1.1'\n    apt 'com.github.mzule.activityrouter:compiler:1.1.1'\n}\n```\n\n这样，等项目 sync 完 ActivityRouter 就已经被集成在项目里面了。\n\n此外还需要改一个配置，之前在 `AndroidManifest.xml` 上注册的 ViewActivity 现在要换成 ActivityRouter 里面自带的 Activity，这样 ActivityRouter 才有机会处理相关的 Intent 事件。修改完的 `AndroidManifest.xml` 如下：\n\n``` xml\n<activity\n    android:name=\"com.github.mzule.activityrouter.router.RouterActivity\"\n    android:theme=\"@android:style/Theme.NoDisplay\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.VIEW\" />\n        <category android:name=\"android.intent.category.DEFAULT\" />\n        <category android:name=\"android.intent.category.BROWSABLE\" />\n        <data android:scheme=\"myapp\" />\n    </intent-filter>\n</activity>\n```\n\n接下来就是去修改需要绑定 url 的 Activity，添加注解即可，一个典型的实现如下：\n\n``` java\n@Router(\"main\")\npublic class MainActivity extends Activity {\n}\n```\n\n一个需要参数的 Activity 可以这样声明：\n\n``` java\n@Router(\"user/:userId\") // :userId 代表参数名为 userId\npublic class UserActivity extends Activity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        String userId = getIntent().getStringExtra(\"userId\"); // 获取参数 userId\n    }\n}\n```\n也可以给参数指定类型，比如说常见的 id 为 long 型.\n\n``` java\n@Router(value = \"user/:userId\", longExtra = \"userId\")\n```\n\n这样我们就可以通过 `myapp://main` 来访问 MainActivity, `myapp://user/89757` 来访问 UserActivity 并且 userId = 89757 了。\n\n## H5 实现\n\n如上文所说网页自动跳转到 app 需要 h5 配合，由于 h5 已经超越了 Android 的范畴，这边就直接贴个链接。\n\n[http://t.cn/RqMTBDZ](http://t.cn/RqMTBDZ)\n\n[http://t.cn/RzOQWGU](http://t.cn/RzOQWGU)\n\n## App 内应用场景\n\n除了第三方 app 跳转场景外，还可以在 app 内部 Activity 跳转时采用 Router 来实现，比如在 Android 端和后端约定好页面对应的 url，后端在发送 push 的时候，就可以发送特定的 url，客户端只需要处理打开 url 即可，可以有效减少 push 通知的适配工作。相关 API 如下：\n\n``` java\nRouters.open(Context, String)\nRouters.open(Context, Uri)\n```\n\n## 结语\n\n哈哈，感谢你看到这里。","slug":"通过URL打开Activity","published":1,"updated":"2016-04-11T14:20:46.000Z","_id":"cimw2d8le0000p9queondg23p","comments":1,"layout":"post","photos":[],"link":"","content":"<p>为每个 Activity 绑定一个 url 可以方便的让第三方 app 直接打开这些 Activity。也可以方便在 app 内部进行页面跳转，解耦。</p>\n<p><img src=\"http://7sbl54.com1.z0.glb.clouddn.com/blog_QQ20160411-22.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>举一个常见的案例，假设我们有个产品 A，产品 A 包含 h5 网页端和客户端，当用户在手机打开我们的 h5 网页端的时候，我们会期望如果用户手机安装了我们的客户端，则直接打开 app，否则停留在网页端浏览。</p>\n<p>这是一个很常见的需求，但是实现需要 h5 和 Android 的配合，本文会先说下原理，然后单独描述 Android 端需要做的事情，最后会给一个链接说明 h5 的工作。</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>Android 端先给 Activity 绑定一个 url ，比如说是 <code>myapp://main</code>. </p>\n<p>用户访问 <code>http://myapp.com</code> 网页时，h5 尝试访问 <code>myapp://main</code>，如果用户安装了客户端，则会打开相应的 Activity，否则会继续留在 h5 浏览网页。</p>\n<p>那么，如何给 Activity 绑定一个 url 是在 Android 端的关键。</p>\n<h2 id=\"Android-实现\"><a href=\"#Android-实现\" class=\"headerlink\" title=\"Android 实现\"></a>Android 实现</h2><p>创建一个空的 ViewActivity.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 <code>AndroidManifest.xml</code> 里面注册 ViewActivity，包含一个 action 为  <code>android.intent.action.VIEW</code> 的 <code>intent-filter</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span><br><span class=\"line\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\".ViewActivity\"</span></span><br><span class=\"line\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@android:style/Theme.NoDisplay\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.VIEW\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.DEFAULT\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.BROWSABLE\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">data</span> <span class=\"attr\">android:scheme</span>=<span class=\"string\">\"myapp\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样，<code>ViewActivity</code> 就具备了接收 <code>myapp</code> 协议的 <code>android.intent.action.VIEW</code> 事件的能力。比如说，如果某个 app 执行了下面的这段逻辑，我们的 ViewActivity 就可能被打开。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_VIEW);</span><br><span class=\"line\">intent.setData(Uri.parse(<span class=\"string\">\"myapp://dosomething\"</span>));</span><br><span class=\"line\">startActivity(intent);</span><br></pre></td></tr></table></figure>\n<p>刚才之所以说 “可能被打开”，是为了严谨。因为完全可能用户手机上，还有另外一个 app 也声明了一样协议的 intent-filter. 这时候系统就会给出一个弹出框，让用户选择一个期望的应用来打开该地址。</p>\n<p><img src=\"http://7sbl54.com1.z0.glb.clouddn.com/blog_chooser.png\" alt=\"\"></p>\n<p>既然入口找到了，接下来就简单了，无非就是实现一下 ViewActivity 处理跳转逻辑，比如这样。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        Uri uri = getIntent().getData();</span><br><span class=\"line\">        String url = uri.toString();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">\"myapp://main\"</span>.equals(url)) &#123;</span><br><span class=\"line\">            startActivity(<span class=\"keyword\">new</span> Intent(ViewActivity.<span class=\"keyword\">this</span>, MainActivity.class));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">\"myapp://user\"</span>.equals(url)) &#123;</span><br><span class=\"line\">            startActivity(<span class=\"keyword\">new</span> Intent(ViewActivity.<span class=\"keyword\">this</span>, UserActivity.class));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        finish();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但是上面这种，这是一个理想的情况，因为现实情况会复杂的多。比如说会遇到传参问题，打开一个 UserActivity 可能都是需要指定一个 userId 的。不过再怎么复杂，无非就是对一个 url 的解析。</p>\n<p>下面会介绍一个我写的开源项目，省掉了解析 url 的麻烦，下面会基于这个库来说明。</p>\n<h2 id=\"库\"><a href=\"#库\" class=\"headerlink\" title=\"库\"></a>库</h2><p>这个库叫 <a href=\"https://github.com/mzule/ActivityRouter\" target=\"_blank\" rel=\"external\">ActivityRouter</a>，通过给 Activity 添加注解来绑定 url. 首先我们要把库添加到项目里面来, 需要修改两个 build.gradle 文件。</p>\n<p>项目根目录的 build.gradle</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">  dependencies &#123;</span><br><span class=\"line\">    classpath <span class=\"string\">'com.neenbedankt.gradle.plugins:android-apt:1.7'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>app 项目的 build.gradle</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'android-apt'</span></span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    compile <span class=\"string\">'com.github.mzule.activityrouter:activityrouter:1.1.1'</span></span><br><span class=\"line\">    apt <span class=\"string\">'com.github.mzule.activityrouter:compiler:1.1.1'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样，等项目 sync 完 ActivityRouter 就已经被集成在项目里面了。</p>\n<p>此外还需要改一个配置，之前在 <code>AndroidManifest.xml</code> 上注册的 ViewActivity 现在要换成 ActivityRouter 里面自带的 Activity，这样 ActivityRouter 才有机会处理相关的 Intent 事件。修改完的 <code>AndroidManifest.xml</code> 如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span><br><span class=\"line\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.github.mzule.activityrouter.router.RouterActivity\"</span></span><br><span class=\"line\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@android:style/Theme.NoDisplay\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.VIEW\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.DEFAULT\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.BROWSABLE\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">data</span> <span class=\"attr\">android:scheme</span>=<span class=\"string\">\"myapp\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>接下来就是去修改需要绑定 url 的 Activity，添加注解即可，一个典型的实现如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Router</span>(<span class=\"string\">\"main\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>一个需要参数的 Activity 可以这样声明：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Router</span>(<span class=\"string\">\"user/:userId\"</span>) <span class=\"comment\">// :userId 代表参数名为 userId</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        String userId = getIntent().getStringExtra(<span class=\"string\">\"userId\"</span>); <span class=\"comment\">// 获取参数 userId</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>也可以给参数指定类型，比如说常见的 id 为 long 型.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Router</span>(value = <span class=\"string\">\"user/:userId\"</span>, longExtra = <span class=\"string\">\"userId\"</span>)</span><br></pre></td></tr></table></figure>\n<p>这样我们就可以通过 <code>myapp://main</code> 来访问 MainActivity, <code>myapp://user/89757</code> 来访问 UserActivity 并且 userId = 89757 了。</p>\n<h2 id=\"H5-实现\"><a href=\"#H5-实现\" class=\"headerlink\" title=\"H5 实现\"></a>H5 实现</h2><p>如上文所说网页自动跳转到 app 需要 h5 配合，由于 h5 已经超越了 Android 的范畴，这边就直接贴个链接。</p>\n<p><a href=\"http://t.cn/RqMTBDZ\" target=\"_blank\" rel=\"external\">http://t.cn/RqMTBDZ</a></p>\n<p><a href=\"http://t.cn/RzOQWGU\" target=\"_blank\" rel=\"external\">http://t.cn/RzOQWGU</a></p>\n<h2 id=\"App-内应用场景\"><a href=\"#App-内应用场景\" class=\"headerlink\" title=\"App 内应用场景\"></a>App 内应用场景</h2><p>除了第三方 app 跳转场景外，还可以在 app 内部 Activity 跳转时采用 Router 来实现，比如在 Android 端和后端约定好页面对应的 url，后端在发送 push 的时候，就可以发送特定的 url，客户端只需要处理打开 url 即可，可以有效减少 push 通知的适配工作。相关 API 如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Routers.open(Context, String)</span><br><span class=\"line\">Routers.open(Context, Uri)</span><br></pre></td></tr></table></figure>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>哈哈，感谢你看到这里。</p>\n","excerpt":"<p>为每个 Activity 绑定一个 url 可以方便的让第三方 app 直接打开这些 Activity。也可以方便在 app 内部进行页面跳转，解耦。</p>\n<p><img src=\"http://7sbl54.com1.z0.glb.clouddn.com/blog_QQ20160411-22.png\" alt=\"\"></p>","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>举一个常见的案例，假设我们有个产品 A，产品 A 包含 h5 网页端和客户端，当用户在手机打开我们的 h5 网页端的时候，我们会期望如果用户手机安装了我们的客户端，则直接打开 app，否则停留在网页端浏览。</p>\n<p>这是一个很常见的需求，但是实现需要 h5 和 Android 的配合，本文会先说下原理，然后单独描述 Android 端需要做的事情，最后会给一个链接说明 h5 的工作。</p>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>Android 端先给 Activity 绑定一个 url ，比如说是 <code>myapp://main</code>. </p>\n<p>用户访问 <code>http://myapp.com</code> 网页时，h5 尝试访问 <code>myapp://main</code>，如果用户安装了客户端，则会打开相应的 Activity，否则会继续留在 h5 浏览网页。</p>\n<p>那么，如何给 Activity 绑定一个 url 是在 Android 端的关键。</p>\n<h2 id=\"Android-实现\"><a href=\"#Android-实现\" class=\"headerlink\" title=\"Android 实现\"></a>Android 实现</h2><p>创建一个空的 ViewActivity.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在 <code>AndroidManifest.xml</code> 里面注册 ViewActivity，包含一个 action 为  <code>android.intent.action.VIEW</code> 的 <code>intent-filter</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span><br><span class=\"line\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\".ViewActivity\"</span></span><br><span class=\"line\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@android:style/Theme.NoDisplay\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.VIEW\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.DEFAULT\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.BROWSABLE\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">data</span> <span class=\"attr\">android:scheme</span>=<span class=\"string\">\"myapp\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>这样，<code>ViewActivity</code> 就具备了接收 <code>myapp</code> 协议的 <code>android.intent.action.VIEW</code> 事件的能力。比如说，如果某个 app 执行了下面的这段逻辑，我们的 ViewActivity 就可能被打开。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Intent intent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_VIEW);</span><br><span class=\"line\">intent.setData(Uri.parse(<span class=\"string\">\"myapp://dosomething\"</span>));</span><br><span class=\"line\">startActivity(intent);</span><br></pre></td></tr></table></figure>\n<p>刚才之所以说 “可能被打开”，是为了严谨。因为完全可能用户手机上，还有另外一个 app 也声明了一样协议的 intent-filter. 这时候系统就会给出一个弹出框，让用户选择一个期望的应用来打开该地址。</p>\n<p><img src=\"http://7sbl54.com1.z0.glb.clouddn.com/blog_chooser.png\" alt=\"\"></p>\n<p>既然入口找到了，接下来就简单了，无非就是实现一下 ViewActivity 处理跳转逻辑，比如这样。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        Uri uri = getIntent().getData();</span><br><span class=\"line\">        String url = uri.toString();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">\"myapp://main\"</span>.equals(url)) &#123;</span><br><span class=\"line\">            startActivity(<span class=\"keyword\">new</span> Intent(ViewActivity.<span class=\"keyword\">this</span>, MainActivity.class));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"string\">\"myapp://user\"</span>.equals(url)) &#123;</span><br><span class=\"line\">            startActivity(<span class=\"keyword\">new</span> Intent(ViewActivity.<span class=\"keyword\">this</span>, UserActivity.class));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        finish();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>但是上面这种，这是一个理想的情况，因为现实情况会复杂的多。比如说会遇到传参问题，打开一个 UserActivity 可能都是需要指定一个 userId 的。不过再怎么复杂，无非就是对一个 url 的解析。</p>\n<p>下面会介绍一个我写的开源项目，省掉了解析 url 的麻烦，下面会基于这个库来说明。</p>\n<h2 id=\"库\"><a href=\"#库\" class=\"headerlink\" title=\"库\"></a>库</h2><p>这个库叫 <a href=\"https://github.com/mzule/ActivityRouter\">ActivityRouter</a>，通过给 Activity 添加注解来绑定 url. 首先我们要把库添加到项目里面来, 需要修改两个 build.gradle 文件。</p>\n<p>项目根目录的 build.gradle</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">  dependencies &#123;</span><br><span class=\"line\">    classpath <span class=\"string\">'com.neenbedankt.gradle.plugins:android-apt:1.7'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>app 项目的 build.gradle</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'android-apt'</span></span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    compile <span class=\"string\">'com.github.mzule.activityrouter:activityrouter:1.1.1'</span></span><br><span class=\"line\">    apt <span class=\"string\">'com.github.mzule.activityrouter:compiler:1.1.1'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样，等项目 sync 完 ActivityRouter 就已经被集成在项目里面了。</p>\n<p>此外还需要改一个配置，之前在 <code>AndroidManifest.xml</code> 上注册的 ViewActivity 现在要换成 ActivityRouter 里面自带的 Activity，这样 ActivityRouter 才有机会处理相关的 Intent 事件。修改完的 <code>AndroidManifest.xml</code> 如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">activity</span></span><br><span class=\"line\">    <span class=\"attr\">android:name</span>=<span class=\"string\">\"com.github.mzule.activityrouter.router.RouterActivity\"</span></span><br><span class=\"line\">    <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@android:style/Theme.NoDisplay\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">intent-filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">action</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.action.VIEW\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.DEFAULT\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.intent.category.BROWSABLE\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">data</span> <span class=\"attr\">android:scheme</span>=<span class=\"string\">\"myapp\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">intent-filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">activity</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>接下来就是去修改需要绑定 url 的 Activity，添加注解即可，一个典型的实现如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Router</span>(<span class=\"string\">\"main\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>一个需要参数的 Activity 可以这样声明：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Router</span>(<span class=\"string\">\"user/:userId\"</span>) <span class=\"comment\">// :userId 代表参数名为 userId</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        String userId = getIntent().getStringExtra(<span class=\"string\">\"userId\"</span>); <span class=\"comment\">// 获取参数 userId</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>也可以给参数指定类型，比如说常见的 id 为 long 型.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Router</span>(value = <span class=\"string\">\"user/:userId\"</span>, longExtra = <span class=\"string\">\"userId\"</span>)</span><br></pre></td></tr></table></figure>\n<p>这样我们就可以通过 <code>myapp://main</code> 来访问 MainActivity, <code>myapp://user/89757</code> 来访问 UserActivity 并且 userId = 89757 了。</p>\n<h2 id=\"H5-实现\"><a href=\"#H5-实现\" class=\"headerlink\" title=\"H5 实现\"></a>H5 实现</h2><p>如上文所说网页自动跳转到 app 需要 h5 配合，由于 h5 已经超越了 Android 的范畴，这边就直接贴个链接。</p>\n<p><a href=\"http://t.cn/RqMTBDZ\">http://t.cn/RqMTBDZ</a></p>\n<p><a href=\"http://t.cn/RzOQWGU\">http://t.cn/RzOQWGU</a></p>\n<h2 id=\"App-内应用场景\"><a href=\"#App-内应用场景\" class=\"headerlink\" title=\"App 内应用场景\"></a>App 内应用场景</h2><p>除了第三方 app 跳转场景外，还可以在 app 内部 Activity 跳转时采用 Router 来实现，比如在 Android 端和后端约定好页面对应的 url，后端在发送 push 的时候，就可以发送特定的 url，客户端只需要处理打开 url 即可，可以有效减少 push 通知的适配工作。相关 API 如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Routers.open(Context, String)</span><br><span class=\"line\">Routers.open(Context, Uri)</span><br></pre></td></tr></table></figure>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>哈哈，感谢你看到这里。</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cimw2d8le0000p9queondg23p","tag_id":"cimw2d8lr0002p9quv4h95m4a","_id":"cimw2d8lu0003p9qux89scvx5"}],"Tag":[{"name":"ActivityRouter","_id":"cimw2d8lr0002p9quv4h95m4a"}]}}